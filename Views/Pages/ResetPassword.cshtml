@model dytsenayasar.Models.ControllerModels.PagesControllerModels.ResetPasswordModel

@inject Microsoft.Extensions.Localization.IStringLocalizer Localizer

@{
    var showForm = ((bool?) ViewData["show_form"]) ?? false;
}

<!DOCTYPE html>
 
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
    <title>Index</title>

    <style>
        .validation-summary-valid{
            display: none;
        }
        .validation-summary-errors li{
            color: red;
        }
        html, body, .box-panel{
            height: 100%;
        }
    </style>
</head>
<body>
    
@if(!showForm)
{
    <div class="container">
        <div class="row">
            <div class="col12">
                <div class="card-panel light-blue darken-4">
                    <span class="white-text valign-wrapper center-block center-align">@ViewData["message"]
                    </span>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="valign-wrapper row box-panel">
        <div class="col card hoverable s10 pull-s1 m6 pull-m3 l4 pull-l4">
            @using (Html.BeginForm("ResetPassword", "Pages", new {id = @ViewData["id"], token = @ViewData["token"]}, 
                FormMethod.Post, null, new { @id = "form", @class = "", onsubmit = "return validateForm()" }))
            {
                <div class="card-content">
                    <span class="card-title">@Localizer["reset_pass_title"]</span>
                    <div class="row">
                        <div class="input-field col s12">
                            @Html.TextBoxFor(m => m.NewPassword, new { @type = "password", @class = "validate", @minlength="4", @maxlength="128", @required = true })  
                            @Html.LabelFor(m => m.NewPassword, @Localizer["reset_pass_new_pass"])
                            @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "helper-text"})
                        </div>
                        <div class="input-field col s12">
                            @Html.TextBoxFor(m => m.ConfirmPassword, new { @type = "password", @class = "", @required = true })
                            @Html.LabelFor(m => m.ConfirmPassword, @Localizer["reset_pass_confirm"])
                        </div>
                    </div>
                </div>
                <div class="card-action right-align">
                    <button type="submit" class="btn waves-effect waves-light light-blue darken-4">@Localizer["submit"]
                            <i class="material-icons right">send</i>
                    </button>
                </div>
            }
        </div>
    </div>

    <script>
        var password = document.getElementById("NewPassword");
        var confirm = document.getElementById("ConfirmPassword");

        confirm.addEventListener("keyup", checkInputs);
        confirm.addEventListener("onfocusout", checkInputs);

        function checkInputs()
        {
            if(password.value == confirm.value){
                confirm.classList.remove("invalid");
                confirm.classList.add("valid");
            }
            else{
                confirm.classList.remove("valid")
                confirm.classList.add("invalid");
            }
        }

        function validateForm()
        {
            if(password.value != confirm.value)
            {
                var toastMsg = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Localizer["reset_pass_dont_match"].Value));
                M.toast({classes: 'red darken-3',
                    html: toastMsg});
                return false;
            }

            return true;
        }
    </script>
}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
</body>
</html>